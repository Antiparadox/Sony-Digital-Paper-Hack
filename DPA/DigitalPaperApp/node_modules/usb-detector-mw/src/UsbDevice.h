//
//  UsbDevice.h
//
//  Copyright 2016 Sony Corporation
//

#pragma once

#include <nan.h>
#include "tstring.h"

struct UsbDevice {
public:
    tstring deviceId;
    int vendorId;
    int productId;
    tstring vendorName;
    tstring deviceName;
    tstring serialNumber;

	inline v8::Local<v8::Object> genV8Object() {
		v8::Local<v8::Object> item = Nan::New<v8::Object>();
		setString(item, "deviceId",		this->deviceId);
		setNumber(item, "vendorId",		this->vendorId);
		setNumber(item, "productId",	this->productId);
		setString(item, "vendorName",	this->vendorName);
		setString(item, "deviceName",	this->deviceName);
		setString(item, "serialNumber",	this->serialNumber);
		return item;
	};

private:
	static void setString(
		/*[in]*/ v8::Local<v8::Object>& item,
		/*[in]*/ const char* strKey,
		/*[in]*/ const std::string& strVal
		)
	{
		item->Set(Nan::New<v8::String>(strKey).ToLocalChecked(), Nan::New<v8::String>(strVal.c_str()).ToLocalChecked());
	}

	static void setString(
		/*[in]*/ v8::Local<v8::Object>& item,
		/*[in]*/ const char* strKey,
		/*[in]*/ const std::wstring& strVal
		)
	{
		item->Set(Nan::New<v8::String>(strKey).ToLocalChecked(), Nan::New<v8::String>((uint16_t*)strVal.c_str(), strVal.length()).ToLocalChecked());
	}

	static void setNumber(
		/*[in]*/ v8::Local<v8::Object>& item,
		/*[in]*/ const char* strKey,
		/*[in]*/ const int iVal
		)
	{
		item->Set(Nan::New<v8::String>(strKey).ToLocalChecked(), Nan::New<v8::Number>(iVal));
	}
};

