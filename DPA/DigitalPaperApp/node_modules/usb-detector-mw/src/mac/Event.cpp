#include "../Event.h"
#include <stdio.h>

Event::Event()
	: hasEventOccurred(false)
	, mEventMutex(PTHREAD_RECURSIVE_MUTEX_INITIALIZER)
	, mEventCond(PTHREAD_COND_INITIALIZER)
{
}

Event::~Event()
{
	pthread_mutex_destroy(&mEventMutex);
	pthread_cond_destroy(&mEventCond);
}

void Event::Wait()
{	
	pthread_mutex_lock(&mEventMutex);
	if (!hasEventOccurred) {
		pthread_cond_wait(&mEventCond, &mEventMutex);
	}
	hasEventOccurred = false;
	pthread_mutex_unlock(&mEventMutex);
}

void Event::Signal()
{
	pthread_mutex_lock(&mEventMutex);
	hasEventOccurred = true;
	pthread_cond_signal(&mEventCond);
	pthread_mutex_unlock(&mEventMutex);
}