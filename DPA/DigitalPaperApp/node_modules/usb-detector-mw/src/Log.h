//
//  Log.h
//
//  Copyright 2016 Sony Corporation
//

#pragma once

#include "tstring.h"
#include <stdarg.h>

#ifdef _MSC_VER
// Windows
#include <windows.h>
#else
// Mac OS X
#endif

#define LOG_DEBUG	Log(_T("usb-detector-mw:usb_detector:debug"), _T("[DEBUG]"), __FUNCTION__, _T(__FILE__), (__LINE__))
#define LOG_ERROR	Log(_T("usb-detector-mw:usb_detector:error"), _T("[ERROR]"), __FUNCTION__, _T(__FILE__), (__LINE__))
#define LOG			Log(_T("usb-detector-mw:usb_detector"), _T(""), __FUNCTION__, _T(__FILE__), (__LINE__))


class Log
{
private:
	static const tchar* ENV_DEBUG;
	static bool CanExport(/*[in]*/ const tchar* tag);
	static tstring GetHeader();

	const tchar*	_tag;
	const tchar*	_level;
	const char*		_function;
	const tchar*	_file;
	const int		_line;

public:
	Log(
		/*[in]*/ const tchar*	tag,
		/*[in]*/ const tchar*	level,
		/*[in]*/ const char*	function,
		/*[in]*/ const tchar*	file,
		/*[in]*/ const int		line
		) : _tag(tag), _level(level), _function(function), _file(file), _line(line)
	{
	}

	void operator ()(/*[in]*/ const tchar* format, ...) const
	{
		if (!format)
		{
			return;
		}

		if (!CanExport(_tag)) {
			return;
		}

		tstring header = GetHeader();

		va_list vl;
		va_start(vl, format);
		tchar szBody[256] = { 0 };
#ifdef _MSC_VER
        // Windows
        ::_vsntprintf_s(szBody, 256, _TRUNCATE, format, vl);
#else
        // Mac OS X
        ::vsnprintf(szBody, 256, format, vl);
#endif
		va_end(vl);
		tstring body = szBody;
		tprintf_s(_T("%s %s %s (%s:%d)\n"), header.c_str(), _level, body.c_str(), _file, _line);

		/*
		TCHAR szFunction[256] = { 0 };
		A2T(_function, szFunction, 256);

		tprintf_s(_T("%s [%s]%s %s (%s:%d)\n"), header.c_str(), szFunction, _level, body.c_str(), _file, _line);
		*/
	}

private:
	void A2T(const char* src, tchar* dst, int wstringLength) const {
#ifdef WIN_UNICODE
		::MultiByteToWideChar(CP_OEMCP, MB_PRECOMPOSED, src, strlen(src), dst, wstringLength);
#else
		::strcpy(dst, src);
#endif
	}
};

