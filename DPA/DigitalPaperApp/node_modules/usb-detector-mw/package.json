{
  "_args": [
    [
      "usb-detector-mw@git+ssh://git@github.com/LinfinyJapan/dps_node-usb-detector-mw.git",
      "/Users/altair/Work/v1.4.0.19120/dps_utility/release/dps_digitalpaperapp-pc/node_modules/mw-usb-initiator"
    ]
  ],
  "_from": "git+ssh://git@github.com/LinfinyJapan/dps_node-usb-detector-mw.git",
  "_id": "usb-detector-mw@0.2.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/usb-detector-mw",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/LinfinyJapan/dps_node-usb-detector-mw/master/package.json",
      "gitUrl": "git://github.com/LinfinyJapan/dps_node-usb-detector-mw.git",
      "httpsUrl": "git+https://github.com/LinfinyJapan/dps_node-usb-detector-mw.git",
      "shortcut": "github:LinfinyJapan/dps_node-usb-detector-mw",
      "ssh": "git@github.com:LinfinyJapan/dps_node-usb-detector-mw.git",
      "sshUrl": "git+ssh://git@github.com/LinfinyJapan/dps_node-usb-detector-mw.git",
      "type": "github"
    },
    "name": "usb-detector-mw",
    "raw": "usb-detector-mw@git+ssh://git@github.com/LinfinyJapan/dps_node-usb-detector-mw.git",
    "rawSpec": "git+ssh://git@github.com/LinfinyJapan/dps_node-usb-detector-mw.git",
    "scope": null,
    "spec": "git+ssh://git@github.com/LinfinyJapan/dps_node-usb-detector-mw.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/mw-usb-initiator"
  ],
  "_resolved": "git+ssh://git@github.com/LinfinyJapan/dps_node-usb-detector-mw.git#dd344ef3462c5147216888751954885a3b8ff5e6",
  "_shasum": "5a43ea2d3cbfbc77863aa73d34c2107b587648b4",
  "_shrinkwrap": null,
  "_spec": "usb-detector-mw@git+ssh://git@github.com/LinfinyJapan/dps_node-usb-detector-mw.git",
  "_where": "/Users/altair/Work/v1.4.0.19120/dps_utility/release/dps_digitalpaperapp-pc/node_modules/mw-usb-initiator",
  "author": "",
  "bugs": {
    "url": "https://github.com/LinfinyJapan/dps_node-usb-detector-mw/issues"
  },
  "dependencies": {
    "debug": "^2.2.0",
    "eventemitter2": "^1.0.3",
    "nan": "^2.3.3"
  },
  "description": "Win/Mac へのUSB機器の接続/切断を検出する。",
  "devDependencies": {},
  "gitHead": "dd344ef3462c5147216888751954885a3b8ff5e6",
  "gypfile": true,
  "homepage": "https://github.com/LinfinyJapan/dps_node-usb-detector-mw#readme",
  "license": "SEE LICENSE IN LICENSE",
  "main": "index.js",
  "name": "usb-detector-mw",
  "optionalDependencies": {},
  "readme": "# node-usb-detector-mw\r\n\r\nWin/Mac へのUSB機器の接続/切断を検出する。\r\n\r\n### [Changelog](https://github.com/LinfinyJapan/dps_node-mw-usb-detector/blob/master/CHANGELOG.md)\r\n\r\n\r\n# Install\r\n\r\n 1. GitHub上の [node-usb-detector-mw](https://github.com/LinfinyJapan/dps_node-usb-detector-mw.git) をローカルにクローンする\r\n 2. 'npm install' を使用して`node-usb-detector-mw`をインストールする\r\n```\r\n> cd node-usb-detector-mw\r\n> npm install\r\n```\r\n\r\n### Common:\r\n\r\n  - Python 2.x\r\n  - [node-gyp](https://github.com/TooTallNate/node-gyp)\r\n\r\n### Windows:\r\n\r\n  - Visual Studio 2013\r\n  - [Windows 8.1 SDK](http://msdn.microsoft.com/ja-jp/windows/desktop/bg162891)\r\n    - \"cfgmgr32.lib\" を必要とするため\r\n\r\n### Mac OS X:\r\n\r\n - xCode Command Line Tools\r\n  - [Downloads for Apple Developers](https://developer.apple.com/downloads/) からダウンロード可能\r\n\r\n\r\n# Usage\r\n\r\n```js\r\nvar UsbDetector = require('usb-detector-mw');\r\nconst detector = new UsbDetector();\r\n\r\n// USB機器の接続通知\r\ndetector.on('add:' + 0x054C, function (device) {\r\n  console.log('onAdded', device);\r\n});\r\n\r\n// USB機器の切断通知\r\ndetector.on('remove:' + 0x054C, function (device) {\r\n  console.log('onRemoved', device);\r\n});\r\n\r\n// USBの接続/切断の検出処理を開始する\r\ndetector.start(function (error, deviceArray) {\r\n  if (error) {\r\n    console.log('start', error);\r\n    return;\r\n  }\r\n  console.log('start', deviceArray);\r\n});\r\n\r\n// USB機器を検索する\r\ndetector.find(0x054C, function (error, deviceArray) {\r\n  if (error) {\r\n    console.log('find', error);\r\n    return;\r\n  }\r\n  console.log('find', deviceArray);\r\n});\r\n\r\n// USBの接続/切断の検出処理を終了する\r\ndetector.stop(function (error) {\r\n  if (error) {\r\n    console.log('stop', error);\r\n    return;\r\n  }\r\n  console.log('stop');\r\n});\r\n```\r\n\r\n\r\n# API\r\n\r\n## `start(vid, pid, callback)`\r\n - Win/MacへのUSB機器の接続/切断の検出処理を開始/再開する。\r\n - 検出処理の開始時に、接続されているUSB機器の一覧をcallbackする。\r\n\r\n### 使用方法\r\n  - API:\r\n    - `start()`\r\n    - `start(callback)`\r\n    - `start(vid, callback)`\r\n    - `start(vid, pid, callback)`\r\n  - Paramters:\r\n    - `vid`: 検出開始時に接続されいるUSB機器の中で、結果に含めるUSB機器の`Vendor ID`\r\n    - `pid`: 検出開始時に接続されいるUSB機器の中で、結果に含めるUSB機器の`Product ID`\r\n    - `callback`: 検出処理が開始された際に呼び出される`callback`\r\n\r\n### 使用例\r\n```js\r\nvar UsbDetector = require('usb-detector-mw');\r\nconst detector = new UsbDetector();\r\n\r\ndetector.start(0x054C, function (error, deviceArray) {\r\n  if (error) {\r\n    console.log('start', error);\r\n    return;\r\n  }\r\n  console.log('start', deviceArray);\r\n});\r\n\r\n/* Console output:\r\nstart [ { deviceId: 'USB\\\\VID_054C&PID_0BE5\\\\012345678900002',\r\n    vendorId: 1356,\r\n    productId: 3045,\r\n    vendorName: '(標準 USB ホスト コントローラー)',\r\n    deviceName: 'USB Composite Device',\r\n    serialNumber: '012345678900002' },\r\n  { deviceId: 'USB\\\\VID_054C&PID_0BE5\\\\012345678900001',\r\n    vendorId: 1356,\r\n    productId: 3045,\r\n    vendorName: '(標準 USB ホスト コントローラー)',\r\n    deviceName: 'USB Composite Device',\r\n    serialNumber: '012345678900001' } ]\r\n*/\r\n```\r\n\r\n## `stop(callback)`\r\n - Win/MacへのUSB機器の接続/切断の検出処理を中断/終了する。\r\n\r\n### 使用方法\r\n  - API:\r\n    - `stop()`\r\n    - `stop(callback)`\r\n  - Paramters:\r\n    - `callback`: 検出処理が終了した際に呼び出される`callback`\r\n\r\n\r\n## `on(eventName, callback)`\r\n\r\n - `eventName`: 検出するイベントの指定\r\n \t - `add`: USB接続時のイベント\r\n \t \t - `add:vid`\r\n \t \t - `add:vid:pid`\r\n \t - `remove`: USB切断時のイベント\r\n \t \t - `remove:vid`\r\n \t \t - `remove:vid:pid`\r\n - `callback`: 指定されたイベントが検出された際に呼び出されるcallback\r\n\r\n```js\r\nvar UsbDetector = require('usb-detector-mw');\r\nconst detector = new UsbDetector();\r\n\r\ndetector.on('add:' + 0x054C, function (device) {\r\n  console.log('onAdded', device);\r\n});\r\n\r\ndetector.on('remove:' + 0x054C, function (device) {\r\n  console.log('onRemoved', device);\r\n});\r\n\r\ndetector.start(0x054C, function (deviceArray) {\r\n  console.log('start', deviceArray);\r\n});\r\n\r\n/* Console output:\r\nonAdded { deviceId: 'USB\\\\VID_054C&PID_0BE5\\\\012345678900001',\r\n  vendorId: 1356,\r\n  productId: 3045,\r\n  vendorName: '(標準 USB ホスト コントローラー)',\r\n  deviceName: 'USB Composite Device',\r\n  serialNumber: '012345678900001' }\r\nonRemoved { deviceId: 'USB\\\\VID_054C&PID_0BE5\\\\012345678900001',\r\n  vendorId: 1356,\r\n  productId: 3045,\r\n  vendorName: '(標準 USB ホスト コントローラー)',\r\n  deviceName: 'USB Composite Device',\r\n  serialNumber: '012345678900001' }\r\n*/\r\n```\r\n\r\n## `find(vid, pid, callback)`\r\n - 現在、Win/Macに接続されているUSB機器を検索する。\r\n - `start(vid, pid, callback)`の`callback`が呼び出された以降に呼び出す必要がある。\r\n\r\n### 使用方法\r\n  - API:\r\n    - `find()`\r\n    - `find(callback)`\r\n    - `find(vid, callback)`\r\n    - `find(vid, pid, callback)`\r\n  - Paramters:\r\n    - `vid`: 検索対象のUSB機器の`Vendor ID`\r\n    - `pid`: 検索対象のUSB機器の`Product ID`\r\n    - `callback`: 検索が完了した際に呼び出される`callback`\r\n\r\n### 使用例\r\n```js\r\nvar UsbDetector = require('usb-detector-mw');\r\nconst detector = new UsbDetector();\r\n\r\ndetector.start(function (error, deviceArray) {\r\n  if (error) {\r\n    console.log('start', error);\r\n    return;\r\n  }\r\n  \r\n  detector.find(0x054C, function(error, deviceArray) {\r\n    if (error) {\r\n      console.log('find', error);\r\n      return;\r\n    }\r\n    console.log('find', deviceArray);\r\n  });\r\n});\r\n\r\n/* Console output:\r\nfind [ { deviceId: 'USB\\\\VID_054C&PID_0BE5\\\\012345678900002',\r\n    vendorId: 1356,\r\n    productId: 3045,\r\n    vendorName: '(標準 USB ホスト コントローラー)',\r\n    deviceName: 'USB Composite Device',\r\n    serialNumber: '012345678900002' },\r\n  { deviceId: 'USB\\\\VID_054C&PID_0BE5\\\\012345678900001',\r\n    vendorId: 1356,\r\n    productId: 3045,\r\n    vendorName: '(標準 USB ホスト コントローラー)',\r\n    deviceName: 'USB Composite Device',\r\n    serialNumber: '012345678900001' } ]\r\n*/\r\n```\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/LinfinyJapan/dps_node-usb-detector-mw.git"
  },
  "scripts": {
    "doc": "jsdoc2md -c doc/conf.json *.js > doc/interface.md",
    "install": "node-gyp rebuild",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.2.0"
}
