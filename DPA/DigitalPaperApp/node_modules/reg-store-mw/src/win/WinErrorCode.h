//
//  WinErrorCode.h
//
//  Copyright 2016 Sony Corporation
//

#pragma once

#include <winerror.h>
#include <windows.h>
#include <string>

class WinErrorCode
{
public:
	/**
	 * Converts a Win32 system error code to a formatted string object .
	 * 
	 * @param win32Error A Win32 system error code.
	 * @return A formatted error string object.
	 * 		e.g.) "WIN:2:Incorrect function."
	 * @see https://msdn.microsoft.com/ja-jp/library/windows/desktop/ms681381(v=vs.85).aspx
	 */
	static std::string ToString(/*[in]*/ ULONG win32Err)
	{
		std::string message;

		LPVOID lpMsgBuf = NULL;		
		::FormatMessageA(
			FORMAT_MESSAGE_ALLOCATE_BUFFER |
			FORMAT_MESSAGE_FROM_SYSTEM,
			NULL,
			win32Err,
			MAKELANGID(LANG_ENGLISH, SUBLANG_ENGLISH_US),
			(LPSTR)&lpMsgBuf,
			0,
			NULL
			);
		if (lpMsgBuf) {
			message = (LPSTR)lpMsgBuf;
			::LocalFree(lpMsgBuf);
			lpMsgBuf = NULL;
		}

		return "WIN:" + std::to_string(win32Err) + ":" + message;
	}

	static std::string GetLastError()
	{
		const ULONG errCode = ::GetLastError();
		return WinErrorCode::ToString(errCode);
	}
};

