#include "../Log.h"
#include <string>
#include <sstream>
#include <Windows.h>

#define LOG_ENV_WILDCARD	_T("*")
#define LOG_ENV_DELIMITER	_T(',')

const tchar* Log::ENV_DEBUG = ::_tgetenv(_T("DEBUG"));

bool Log::CanExport(
	/*[in]*/ const tchar* tag
	)
{
	if (!tag || ::_tcslen(tag) == 0) {
		return false;
	}

	if (!ENV_DEBUG) {
		return false;
	}

	tstringstream streamEnvDebug(ENV_DEBUG);
	tstring field;
	while (std::getline(streamEnvDebug, field, LOG_ENV_DELIMITER)) {
		if (::_tcsicmp(LOG_ENV_WILDCARD, field.c_str()) == 0) {
			return true;
		}
		if (::_tcsicmp(tag, field.c_str()) == 0) {
			return true;
		}
	}
	return false;
}

tstring Log::GetHeader()
{
	const ULONG ulProcessId = ::GetCurrentProcessId();
	const ULONG ulThreadId = ::GetCurrentThreadId();

	SYSTEMTIME stTime = { 0 };
	::GetLocalTime(&stTime);

	TCHAR szHeader[64] = { 0 };
	::_sntprintf_s(
		szHeader,
		_countof(szHeader) - 1,
		_T("[%04d/%02d/%02d %02d:%02d:%02d.%03d][%X][%08X]"),
		stTime.wYear,
		stTime.wMonth,
		stTime.wDay,
		stTime.wHour,
		stTime.wMinute,
		stTime.wSecond,
		stTime.wMilliseconds,
		ulProcessId,
		ulThreadId
		);

	tstring header = szHeader;
	return header;
}

