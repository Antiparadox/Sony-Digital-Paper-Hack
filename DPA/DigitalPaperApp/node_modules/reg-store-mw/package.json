{
  "_args": [
    [
      "reg-store-mw@git+ssh://git@github.com/LinfinyJapan/dps_node-reg-store-mw.git",
      "/Users/altair/Work/v1.4.0.19120/dps_utility/release/dps_digitalpaperapp-pc/node_modules/mw-auth-ctrl"
    ]
  ],
  "_from": "git+ssh://git@github.com/LinfinyJapan/dps_node-reg-store-mw.git",
  "_id": "reg-store-mw@0.6.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/reg-store-mw",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/LinfinyJapan/dps_node-reg-store-mw/master/package.json",
      "gitUrl": "git://github.com/LinfinyJapan/dps_node-reg-store-mw.git",
      "httpsUrl": "git+https://github.com/LinfinyJapan/dps_node-reg-store-mw.git",
      "shortcut": "github:LinfinyJapan/dps_node-reg-store-mw",
      "ssh": "git@github.com:LinfinyJapan/dps_node-reg-store-mw.git",
      "sshUrl": "git+ssh://git@github.com/LinfinyJapan/dps_node-reg-store-mw.git",
      "type": "github"
    },
    "name": "reg-store-mw",
    "raw": "reg-store-mw@git+ssh://git@github.com/LinfinyJapan/dps_node-reg-store-mw.git",
    "rawSpec": "git+ssh://git@github.com/LinfinyJapan/dps_node-reg-store-mw.git",
    "scope": null,
    "spec": "git+ssh://git@github.com/LinfinyJapan/dps_node-reg-store-mw.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/mw-auth-ctrl",
    "/mw-reg-ctrl"
  ],
  "_resolved": "git+ssh://git@github.com/LinfinyJapan/dps_node-reg-store-mw.git#e6cf3a67cd484b1c197ce88d12980389bf885570",
  "_shasum": "12724a56bb38db9e86bbf6f75fac43a32a885fd5",
  "_shrinkwrap": null,
  "_spec": "reg-store-mw@git+ssh://git@github.com/LinfinyJapan/dps_node-reg-store-mw.git",
  "_where": "/Users/altair/Work/v1.4.0.19120/dps_utility/release/dps_digitalpaperapp-pc/node_modules/mw-auth-ctrl",
  "author": "",
  "dependencies": {
    "debug": "^2.2.0",
    "mw-error": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-error.git",
    "nan": "^2.3.5",
    "uuid": "^2.0.2"
  },
  "description": "MilkyWay Registration Data Store (reg-store-mw)\r ====================",
  "devDependencies": {},
  "gitHead": "e6cf3a67cd484b1c197ce88d12980389bf885570",
  "gypfile": true,
  "license": "SEE LICENSE IN LICENSE",
  "main": "index.js",
  "name": "reg-store-mw",
  "optionalDependencies": {},
  "readme": "MilkyWay Registration Data Store (reg-store-mw)\r\n====================\r\n\r\n登録情報の保存管理を行うModule\r\n\r\nModule Functions\r\n--------------------\r\n\r\n* 登録情報の保存管理を行う。\r\n  * 呼び出しに応じて、サーバ証明書をPC/Macにインストールする。\r\n  * 呼び出しに応じて、サーバ証明書をアンインストールする。\r\n  * 登録情報を平文でアプリケーション設定領域に保存する。\r\n  * 保存情報が情報が壊れていることを検出したら、情報が無いものとして扱う。\r\n  * 呼び出しに応じて保存情報を、破棄する。\r\n\r\nModule API\r\n--------------------\r\n\r\n* [interface](doc/interface.md)\r\n\r\n\r\n## デバッグ方法\r\n\r\n### Windows の場合\r\n\r\nVisual Studio を使用して C/C++ のコードをデバッグする際の手順です。\r\n\r\n0. 事前に npm install にて依存するmoduleなどをインストールしておく\r\n  ```\r\n  $ cd node-reg-store-mw\r\n  $ npm install\r\n  \r\n  ```\r\n1. node-gyp でビルドを行い、Visual Studio で solution file を開く\r\n  ```\r\n  $ node-gyp build\r\n  $ start ./build/binding.sln\r\n  \r\n  ```\r\n2. \"proxy_resolver\"プロジェクトのプロパティを開く\r\n3. [構成(C):] を [Release] に変更する\r\n4. [構成プロパティ] > [デバッグ] を開く\r\n5. [コマンド]と[コマンド引数]の値を以下のように設定する\r\n  - コマンド: \r\n    - node.exe のファイルパス\r\n    - 例）C:\\Program Files (x86)\\nodejs\\node.exe\r\n  - コマンド引数：\r\n    - 実行対象の js ファイルのパス\r\n    - 例）D:\\node-reg-store-mw\\example\\example.js\r\n6. Releaseビルドする\r\n7. デバッグ実行する\r\n\r\n\r\n### macOS(OS X) の場合\r\n\r\nXcode を使用して C/C++ のコードをデバッグする際の手順です。\r\n\r\n0. 事前に npm install にて依存するmoduleなどをインストールしておく\r\n  ```\r\n  $ cd node-reg-store-mw\r\n  $ npm install\r\n  \r\n  ```\r\n1. node-gyp で Xcode の project file を生成し、Xcodeで開く\r\n  ```\r\n  $ cd node-reg-store-mw\r\n  $ node-gyp build\r\n  $ node-gyp configure -- -f xcode\r\n  $ open ./build/binding.xcodeproj/\r\n  \r\n  ```\r\n2. 実行ファイルに node.js を指定する\r\n  1. Xcode のメニューから [Product] > [Scheme] > [Edit Scheme] と選択する\r\n  2. ダイアログ上で [Run] > [Info] を選択し、[Executable] を [Other...] に設定する\r\n  3. [Choose an executable to launch] という実行ファイルの選択ダイアログが表示される\r\n  4. ターミナルで which を実行し、node.js のインストールパスをコピーする\r\n    ```\r\n    $ which node\r\n    /usr/local/bin/node\r\n    \r\n    ```\r\n  5. 実行ファイルの選択ダイアログ上で [Command] + [Shift] + [G] を入力する\r\n  6. [Go to the folder:] に node.js のインストールパスを貼り付け、[Choose]を押す\r\n3. 実行時の引数に js ファイルを指定する\r\n  1. ダイアログ上で [Run] > [Arguments] を選択し、[Arguments Passed On Launch] の [＋] を押す\r\n  2. 実行対象のjsファイルの絶対パス（\\\"で括る）を入力し、[Close] を押す\r\n4. リンクするライブラリを設定する\r\n  1. Xcode上の左のペインから [binding] を選択する\r\n  2. Xcode上の中央のペインから [Build Phases] を選択する\r\n  3. [Link Binary With Libraries] の [＋] を押し、以下を追加する\r\n    - CoreFoundation.framework\r\n    - Security.framework\r\n5．ビルドして、デバッグ実行する\r\n\r\n[補足説明]\r\n- ”npm install” や \"node-gyp build\"を行うと、Xcode の project file が削除されます\r\n  - ”node-gyp configure -- -f xcode”を実行して、project file を再生成してください",
  "readmeFilename": "README.md",
  "scripts": {
    "doc": "jsdoc2md -c doc/conf.json index.js > doc/interface.md",
    "install": "node-gyp rebuild",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.6.0"
}
