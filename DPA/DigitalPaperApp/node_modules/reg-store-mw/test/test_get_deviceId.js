process.env.DEBUG = "*";

const fs = require('fs');
const regStore = require('../index.js');

// 環境変数 MW_USER_DATA_DIR_PATH の設定
const MW_PATH_PREFIX = '/Sony Corporation/Digital Paper App';
let appDataPath;
if (process.platform === 'win32') {
  appDataPath = process.env.APPDATA;
} else {
  appDataPath = process.env.HOME + '/Library';
}
process.env.MW_USER_DATA_DIR_PATH = appDataPath + MW_PATH_PREFIX;

// アプリデータ保存用ディレクトリの作成
try {
    var userDataDirStat = fs.statSync(process.env.MW_USER_DATA_DIR_PATH);
} catch (e) {
    if ( e.code === 'ENOENT' ) {
        fs.mkdirSync(process.env.MW_USER_DATA_DIR_PATH);
    }
}

// テストコード

console.log('\n1. Delete a device id file')
const deviceIdPath = process.env.MW_USER_DATA_DIR_PATH + '/deviceid.dat'
try {
  const deviceIdFile = fs.statSync(deviceIdPath);
  if (deviceIdFile) {
    fs.unlinkSync(deviceIdPath);
    console.log('unlink : ' + deviceIdPath);
  }
} catch (error) {
}

console.log('\n2. Generate a device id file')

regStore.getClientDeviceId(function (error, deviceId1) {
  if (error) {
    console.error(error);
    return;
  }
  console.log(deviceId1);

  console.log('\n3. Read device id file');

  regStore.getClientDeviceId(function (error, deviceId2) {
    if (error) {
      console.error(error);
      return;
    }
    console.log(deviceId2);

    console.log('\n4. Compare private/public keys');
    console.log('deviceId1 === deviceId2 : ' + (deviceId1 === deviceId2));
  });

});


