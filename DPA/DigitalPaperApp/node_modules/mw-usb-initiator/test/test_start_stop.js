process.env.DEBUG = "*:error";

var dptUsbInitiator = require('../index.js');
//var DptDetector = require('mw-usb-detector');

// USB(CDC-ACM)接続通知の登録
dptUsbInitiator.on('add:serialport', function (device) {
  console.log('\n<SerialPort> Added\n', device);
});

// USB(CDC-ACM)切断通知の登録
dptUsbInitiator.on('remove:serialport', function (device) {
  console.log('\n<SerialPort> Removed\n', device);
});

// USB(RNDIS/CDC-ECM)接続通知の登録
dptUsbInitiator.on('add:ethernet', function (device) {
  console.log('\n<Ethernet> Added\n', device);
});

// USB(RNDIS/CDC-ECM)切断通知の登録
dptUsbInitiator.on('remove:ethernet', function (device) {
  console.log('\n<Ethernet> Removed\n', device);
});

// USBの接続/切断の検出処理を開始する
dptUsbInitiator.start(function (error, usbSerialArray, usbEtherArray) {
  if (error) {
    console.error(error);
    return;
  }
  console.log('\n<SerialPort> Started\n', usbSerialArray);
  console.log('\n<Ethernet> Started\n', usbEtherArray);

  dptUsbInitiator.stop(function (error) {
    if (error) {
      console.error(error);
      return;
    }
    console.log('\nStopped\n');

    dptUsbInitiator.start(function (error, usbSerialArray, usbEtherArray) {
      if (error) {
        console.error(error);
        return;
      }
      console.log('\n<SerialPort> Started\n', usbSerialArray);
      console.log('\n<Ethernet> Started\n', usbEtherArray);

      dptUsbInitiator.stop(function (error) {
        if (error) {
          console.error(error);
          return;
        }
        console.log('\nStopped\n');

      });
    });
  });
});

