{
  "_args": [
    [
      "mw-usb-initiator@git+ssh://git@github.com/LinfinyJapan/dps_node-mw-usb-initiator.git",
      "/Users/altair/Work/v1.4.0.19120/dps_utility/release/dps_digitalpaperapp-pc"
    ]
  ],
  "_from": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-usb-initiator.git",
  "_id": "mw-usb-initiator@0.1.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/mw-usb-initiator",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/LinfinyJapan/dps_node-mw-usb-initiator/master/package.json",
      "gitUrl": "git://github.com/LinfinyJapan/dps_node-mw-usb-initiator.git",
      "httpsUrl": "git+https://github.com/LinfinyJapan/dps_node-mw-usb-initiator.git",
      "shortcut": "github:LinfinyJapan/dps_node-mw-usb-initiator",
      "ssh": "git@github.com:LinfinyJapan/dps_node-mw-usb-initiator.git",
      "sshUrl": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-usb-initiator.git",
      "type": "github"
    },
    "name": "mw-usb-initiator",
    "raw": "mw-usb-initiator@git+ssh://git@github.com/LinfinyJapan/dps_node-mw-usb-initiator.git",
    "rawSpec": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-usb-initiator.git",
    "scope": null,
    "spec": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-usb-initiator.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/",
    "/mw-discovery-ctrl"
  ],
  "_resolved": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-usb-initiator.git#852186b4eafabeca89d9fb62fbc9998926bdb710",
  "_shasum": "0d9de023b1e57fd9c69bf529360329448a15a829",
  "_shrinkwrap": null,
  "_spec": "mw-usb-initiator@git+ssh://git@github.com/LinfinyJapan/dps_node-mw-usb-initiator.git",
  "_where": "/Users/altair/Work/v1.4.0.19120/dps_utility/release/dps_digitalpaperapp-pc",
  "author": "",
  "bugs": {
    "url": "https://github.com/LinfinyJapan/dps_node-mw-usb-initiator/issues"
  },
  "dependencies": {
    "debug": "^2.2.0",
    "eventemitter2": "^1.0.3",
    "mw-error": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-error.git",
    "retry": "^0.9.0",
    "serialport-mw": "git+ssh://git@github.com/LinfinyJapan/dps_node-serialport-mw.git#add-multi-core-support",
    "usb-detector-mw": "git+ssh://git@github.com/LinfinyJapan/dps_node-usb-detector-mw.git",
    "usb-ethernet-finder-mw": "git+ssh://git@github.com/LinfinyJapan/dps_node-usb-ethernet-finder-mw.git"
  },
  "description": "Win/MacにUSB接続された”Digital Paper\"(DPT)を検出し、USB機器やNetwork Interfaceの情報を取得する。",
  "devDependencies": {},
  "gitHead": "852186b4eafabeca89d9fb62fbc9998926bdb710",
  "homepage": "https://github.com/LinfinyJapan/dps_node-mw-usb-initiator#readme",
  "license": "SEE LICENSE IN LICENSE",
  "main": "index.js",
  "name": "mw-usb-initiator",
  "optionalDependencies": {},
  "readme": "# node-mw-usb-initiator\r\n\r\nWin/MacにUSB接続された”Digital Paper\"(DPT)を検出し、USB機器やNetwork Interfaceの情報を取得する。\r\n\r\n - Win/Mac への 対応デバイスの\"USB SerialPort (CDC-ACM)\"としての接続/切断の検出\r\n - Win/Mac に\"USB Serial Port (CDC-ACM)\"で接続された対応デバイスの\"USB Ethernet (RNDIS/CDC-ECM)\"への切り替え\r\n - Win/Mac への 対応デバイス の\"USB Ethernet(RNDIS/CDC-ECM)\"としての接続/切断の検出\r\n - \"USB Ethernet (RNDIS/CDC-ECM)\"として接続された対応デバイスの\"IPv6 Link Local Address\"の取得\r\n\r\n#### [Changelog](https://github.com/LinfinyJapan/dps_node-mw-usb-detector/blob/master/CHANGELOG.md)\r\n\r\n\r\n# Install\r\n\r\n 1. GitHub上の [`node-mw-usb-initiator`](https://github.com/LinfinyJapan/dps_node-usb-initiator-mw.git) をローカルにクローンする\r\n 2. `npm install` を使用して`node-mw-usb-initiator`をインストールする\r\n```\r\n> git clone git@github.com:LinfinyJapan/dps_node-mw-usb-initiator.git\r\n> cd node-mw-usb-initiator\r\n> npm install\r\n```\r\n\r\n### Common:\r\n\r\n  - Python 2.x\r\n  - [node-gyp](https://github.com/TooTallNate/node-gyp)\r\n\r\n### Windows:\r\n\r\n  - Visual Studio 2013\r\n  - [Windows 8.1 SDK](http://msdn.microsoft.com/ja-jp/windows/desktop/bg162891)\r\n    - \"cfgmgr32.lib\" を必要とするため\r\n\r\n### Mac OS X:\r\n\r\n - xCode Command Line Tools\r\n  - [Downloads for Apple Developers](https://developer.apple.com/downloads/) からダウンロード可能\r\n\r\n\r\n# Usage\r\n\r\n```js\r\nvar dptUsbInitiator = require('mw-usb-initiator');\r\n\r\n// USB(CDC-ACM)接続通知の登録\r\ndptUsbInitiator.on('add:serialport', function (device) {\r\n  console.log('\\n<SerialPort> Added\\n', device);\r\n});\r\n\r\n// USB(CDC-ACM)切断通知の登録\r\ndptUsbInitiator.on('remove:serialport', function (device) {\r\n  console.log('\\n<SerialPort> Removed\\n', device);\r\n});\r\n\r\n// USB(RNDIS/CDC-ECM)接続通知の登録\r\ndptUsbInitiator.on('add:ethernet', function (device) {\r\n  console.log('\\n<Ethernet> Added\\n', device);\r\n});\r\n\r\n// USB(RNDIS/CDC-ECM)切断通知の登録\r\ndptUsbInitiator.on('remove:ethernet', function (device) {\r\n  console.log('\\n<Ethernet> Removed\\n', device);\r\n});\r\n\r\n// USBの接続/切断の検出処理を開始する\r\ndptUsbInitiator.start(function (error, usbSerialArray, usbEtherArray) {\r\n  if (error) {\r\n    console.error(error);\r\n    return;\r\n  }\r\n  console.log('\\n<SerialPort> Started\\n', usbSerialArray);\r\n  console.log('\\n<Ethernet> Started\\n', usbEtherArray);\r\n});\r\n```\r\n\r\n# [Interface](doc/interface.md)\r\n\r\n## `start(callback)`\r\n- Win/MacにUSB接続された対応デバイスの接続/切断の検出処理を開始する。\r\n- 検出処理の開始時点で、Win/Macに\"USB Serial Port (CDC-ACM)\"または\"USB Ethernet (RNDIS/CDC-ECM)\"として接続されている対応デバイスの一覧をcallbackする。\r\n\r\n##### Parameters:\r\n- `callback`:\r\n  - Win/Macへの対応デバイスのUSB接続/切断の検出処理の開始された際に呼び出されるcallback。\r\n  - 検出処理の開始時点でWin/MacにUSB接続されている対応デバイスの一覧を通知する。\r\n\r\n##### Example:\r\n```js\r\nvar dptUsbInitiator = require('mw-usb-initiator');\r\n\r\ndptUsbInitiator.start(function (error, usbSerialArray, usbEtherArray) {\r\n  if (error) {\r\n    console.error(error);\r\n    return;\r\n  }\r\n  console.log('\\n<SerialPort> Started\\n', usbSerialArray);\r\n  console.log('\\n<Ethernet> Started\\n', usbEtherArray);\r\n});\r\n\r\n/* Console output:\r\n<SerialPort> Started\r\n [ { serialNumber: '012345678900002' } ]\r\n\r\n<Ethernet> Started\r\n [ { serialNumber: '012345678900001',\r\n    ipV6:\r\n     { address: 'fe80::4133:b287:492b:3ec7',\r\n       netmask: 'ffff:ffff:ffff:ffff::',\r\n       family: 'IPv6',\r\n       mac: '02:35:37:35:3b:3c',\r\n       scopeid: 32,\r\n       internal: false } } ]\r\n*/\r\n```\r\n\r\n## `on(eventName, callback)`\r\n- Win/Macに対する対応デバイスのUSB接続/切断のイベントを受信する。\r\n\r\n##### Parameters:\r\n - `eventName`: 検出するイベントの指定\r\n \t - `add`: USB接続時のイベント\r\n \t \t - `add:serialport`: \"USB Serial Port (CDC-ACM)\"接続時のイベント\r\n \t \t - `add:ethernet`  : \"USB Ethernet (RNDIS/CDC-ECM)\"接続時のイベント\r\n \t - `remove`: USB切断時のイベント\r\n \t \t - `remove:serialport`: \"USB Serial Port (CDC-ACM)\"切断時のイベント\r\n \t \t - `remove:ethernet`  : \"USB Ethernet (RNDIS/CDC-ECM)\"切断時のイベント\r\n - `callback`: 指定されたイベントが検出された際に呼び出されるcallback\r\n\r\n##### Notes: \r\n- \"USB Serial Port(CDC-ACM)\"接続時には、\"USB Ethernet (RNDIS/CDC-ECM)\"への切り替えにより、\r\n  以下の順でイベントが発行される。\r\n  1. `add:serialport`\r\n  2. `remove:serialport`\r\n  3. `add:ethernet`\r\n- `add:ethernet` は、対応デバイスが\"USB Ethernet (RNDIS/CDC-ECM)\"で接続されたことを検知した後、\r\n  IPv6 Address が取得できた際にcallbackされる。\r\n\r\n##### Example:\r\n```js\r\nvar dptUsbInitiator = require('mw-usb-initiator');\r\n\r\ndptUsbInitiator.on('add:serialport', function (device) {\r\n  console.log('\\n<SerialPort> Added\\n', device);\r\n});\r\n\r\ndptUsbInitiator.on('remove:serialport', function (device) {\r\n  console.log('\\n<SerialPort> Removed\\n', device);\r\n});\r\n\r\ndptUsbInitiator.on('add:ethernet', function (device) {\r\n  console.log('\\n<Ethernet> Added\\n', device);\r\n});\r\n\r\ndptUsbInitiator.on('remove:ethernet', function (device) {\r\n  console.log('\\n<Ethernet> Removed\\n', device);\r\n});\r\n\r\ndptUsbInitiator.start(function (error, usbSerialArray, usbEtherArray) {\r\n  if (error) {\r\n    console.error(error);\r\n    return;\r\n  }\r\n});\r\n\r\n/* Console output:\r\n<SerialPort> Added\r\n { serialNumber: '012345678900002' }\r\n\r\n<SerialPort> Removed\r\n { serialNumber: '012345678900002' }\r\n\r\n<Ethernet> Added\r\n { serialNumber: '012345678900002',\r\n  ipV6:\r\n   { address: 'fe80::29e6:35db:8aa6:d253',\r\n     netmask: 'ffff:ffff:ffff:ffff::',\r\n     family: 'IPv6',\r\n     mac: '02:35:37:35:3b:3f',\r\n     scopeid: 31,\r\n     internal: false } }\r\n\r\n<Ethernet> Removed\r\n { serialNumber: '012345678900002',\r\n  ipV6:\r\n   { address: 'fe80::29e6:35db:8aa6:d253',\r\n     netmask: 'ffff:ffff:ffff:ffff::',\r\n     family: 'IPv6',\r\n     mac: '02:35:37:35:3b:3f',\r\n     scopeid: 31,\r\n     internal: false } }\r\n*/\r\n```\r\n\r\n-----\r\n\r\n# Debug\r\n\r\n`node-mw-usb-initiator`自身のdebugに関する情報。\r\n\r\n### Setup\r\n\r\n 1. GitHub上の [`node-usb-detector-mw`](https://github.com/LinfinyJapan/dps_node-usb-detector-mw.git) をローカルにクローンする\r\n 2. GitHub上の [`node-usb-ethernet-finder-mw`](https://github.com/LinfinyJapan/dps_node-usb-ethernet-finder-mw.git) をローカルにクローンする\r\n 3. GitHub上の [`node-mw-usb-initiator`](https://github.com/LinfinyJapan/dps_node-usb-initiator-mw.git) をローカルにクローンする\r\n 4. `npm link` および `npm install` を使用して`node-mw-usb-detector`をインストールする\r\n```\r\n> cd node-usb-detector-mw\r\n> npm install\r\n> npm link\r\n  ...\r\n> cd ../node-usb-ethernet-finder-mw\r\n> npm install\r\n> npm link\r\n  ...\r\n> cd ../node-mw-usb-detector\r\n> npm install\r\n> npm link usb-detector-mw\r\n> npm link usb-ethernet-finder-mw\r\n```\r\n- Mac の場合には`sudo npm link`で実行する必要がある\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/LinfinyJapan/dps_node-mw-usb-initiator.git"
  },
  "scripts": {
    "doc": "jsdoc2md -c doc/conf.json *.js > doc/interface.md",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.2"
}
