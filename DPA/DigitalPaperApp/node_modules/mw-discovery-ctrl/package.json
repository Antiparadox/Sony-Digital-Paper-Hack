{
  "_args": [
    [
      "mw-discovery-ctrl@git+ssh://git@github.com/LinfinyJapan/dps_node-mw-discovery-ctrl.git",
      "/Users/altair/Work/v1.4.0.19120/dps_utility/release/dps_digitalpaperapp-pc/node_modules/mw-conn-ctrl"
    ]
  ],
  "_from": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-discovery-ctrl.git",
  "_id": "mw-discovery-ctrl@0.4.7",
  "_inCache": true,
  "_installable": true,
  "_location": "/mw-discovery-ctrl",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/LinfinyJapan/dps_node-mw-discovery-ctrl/master/package.json",
      "gitUrl": "git://github.com/LinfinyJapan/dps_node-mw-discovery-ctrl.git",
      "httpsUrl": "git+https://github.com/LinfinyJapan/dps_node-mw-discovery-ctrl.git",
      "shortcut": "github:LinfinyJapan/dps_node-mw-discovery-ctrl",
      "ssh": "git@github.com:LinfinyJapan/dps_node-mw-discovery-ctrl.git",
      "sshUrl": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-discovery-ctrl.git",
      "type": "github"
    },
    "name": "mw-discovery-ctrl",
    "raw": "mw-discovery-ctrl@git+ssh://git@github.com/LinfinyJapan/dps_node-mw-discovery-ctrl.git",
    "rawSpec": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-discovery-ctrl.git",
    "scope": null,
    "spec": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-discovery-ctrl.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/mw-conn-ctrl",
    "/mw-conn-selector"
  ],
  "_resolved": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-discovery-ctrl.git#9d10f92c5b3819097294d1ad4a50d3b733280548",
  "_shasum": "577006dff99666447543db2d2102e7e845a635dd",
  "_shrinkwrap": null,
  "_spec": "mw-discovery-ctrl@git+ssh://git@github.com/LinfinyJapan/dps_node-mw-discovery-ctrl.git",
  "_where": "/Users/altair/Work/v1.4.0.19120/dps_utility/release/dps_digitalpaperapp-pc/node_modules/mw-conn-ctrl",
  "author": "",
  "dependencies": {
    "big-integer": "^1.6.17",
    "debug": "^2.2.0",
    "mdns": "^2.4.0",
    "mw-auto-bt-pan-connector": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-auto-bt-pan-connector.git",
    "mw-error": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-error.git",
    "mw-port-fwdr": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-port-fwdr.git",
    "mw-usb-initiator": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-usb-initiator.git"
  },
  "description": "Discovery ctrl",
  "devDependencies": {
    "chai": "^3.5.0",
    "mocha": "^3.0.2",
    "sinon": "^1.17.7"
  },
  "gitHead": "9d10f92c5b3819097294d1ad4a50d3b733280548",
  "license": "SEE LICENSE IN LISENCE",
  "main": "discoveryctrl.js",
  "name": "mw-discovery-ctrl",
  "optionalDependencies": {},
  "private": true,
  "readme": "mw-discovery-ctrl\r\n====================\r\n\r\nUSBおよびPCに接続されているその他のネットワークインターフェースで通信\r\n可能なDenebのIPを特定、保持、列挙する。\r\n\r\nModule Function\r\n--------------------\r\n\r\n* 呼び出しに応じて、現在取得できているDenebの一覧情報を返す。\r\n  - Denebの情報は、DenebのHost名(mDNS.DNS-SDのInstance名), Device ID,\r\n    IPv4 address, IPv6 address, mDNSから取得できたPort番号, 接続方式\r\n    (USB or other NIC)とする。\r\n  \r\n* 通信可能なDenebが登場した場合、呼び出し元に通知する。\r\n  - 例として、mDNSで、新たに、対応するServiceが発見された場合に、その\r\n    情報とともに、利用モジュールに通知する。\r\n  \r\n* 通信可能なDenebが、明確に通信出来ないくなったことが分かった場合、呼び出し元に通知する。\r\n  - mDNSの場合の例として、例えば \"goodbye\" announcement(RFC6762 10.1)\r\n    を受信できた場合に、呼び出し元に通知する。\r\n  \r\n* 呼び出しに応じて、Denebと通信できる状態かを確認し返答する。\r\n  - 通信確認のための、Web API(GET /ping)を叩いて、通信できる状態にあるか確認する。\r\n\r\n* 対象デバイスからデバイス側定義の追加情報を取得する。\r\n  - 追加情報の検出は、デバイスの検出そのものとは独立して行われ、追加情\r\n    報の取得に失敗した場合でも、デバイスの検出は成功したものと見なす。\r\n\r\nModule Network Communication\r\n--------------------\r\n\r\n* このModuleおよび、利用しているModuleは、TCP/IPの同一セグメント上から、\r\n  対応デバイスを検出するために、mDNSを利用する。\r\n  - ただし、USB-Ethernetインターフェースが発見された際は、IpV6アドレスを生成し、mDNS応答前にデバイス一覧に登録する。\r\n\r\n* 対応デバイスのIdentityを特定するために、\r\n  HTTP GET /register/serial_number を利用する。\r\n  このAPIの戻り値のJSON: { value: \"...\" } の \"...\" を deviceId として、\r\n  呼び出しもとに返答する。\r\n  このAPIが存在しない、もしくは応答しない場合には、デバイスは検出しない。\r\n\r\n* 対応デバイスの追加情報を取得するために、\r\n  HTTP GET /register/information を利用する。\r\n  ただし、このAPIが存在しない場合、正常応答しない場合でも、デバイスは\r\n  検出できたものとする。また、このModuleでは、戻り値のJSONの内容を一切\r\n  解釈しない。\r\n  \r\nModule API\r\n--------------------\r\n\r\n* [Interface](doc/interface.md)\r\n\r\nModule Main Dependencies\r\n--------------------\r\n\r\n* [dependencies](doc/dependencies.md)\r\n\r\nModule Install\r\n--------------------\r\n\r\n* Windows (use mdns-js module)\r\n- npm run depend-win\r\n\r\n* MacOSX (use mdns module)\r\n- npm run depend-mac\r\n\r\n* Common (その他共通モジュールの準備)\r\n- npm install\r\n\r\nUnit Test\r\n--------------------\r\n\r\n* install and run → `npm install; npm run test`\r\n  - もしもテストのリソースだけを入れたい場合は `npm install --only=dev` で。\r\n",
  "readmeFilename": "README.md",
  "scripts": {
    "doc": "jsdoc2md --conf doc/conf.json *.js > doc/interface.md",
    "preinstall": "bash ./mdns-depend.sh",
    "test": "mocha -c --reporter spec --timeout 10000 --bail ./spec"
  },
  "version": "0.4.7"
}
