//
//  UsbEthernetDevice.h
//
//  Copyright 2016 Sony Corporation
//

#pragma once

#include <nan.h>
#include <string>

struct UsbEthernetDevice {
public:
    std::string deviceId;
    int vendorId;
    int productId;
    std::string vendorName;
    std::string deviceName;
    std::string serialNumber;
    std::string bsdName;
    
    inline v8::Local<v8::Object> genV8Object() {
        v8::Local<v8::Object> item = Nan::New<v8::Object>();
        setString(item, "deviceId",		this->deviceId);
        setNumber(item, "vendorId",		this->vendorId);
        setNumber(item, "productId",	this->productId);
        setString(item, "vendorName",	this->vendorName);
        setString(item, "deviceName",	this->deviceName);
        setString(item, "serialNumber",	this->serialNumber);
        setString(item, "bsdName",		this->bsdName);
        return item;
    };
    
private:
    static void setString(
                          /*[in]*/ v8::Local<v8::Object>& item,
                          /*[in]*/ const char* strKey,
                          /*[in]*/ const std::string& strVal
                          )
    {
        item->Set(Nan::New<v8::String>(strKey).ToLocalChecked(), Nan::New<v8::String>(strVal.c_str()).ToLocalChecked());
    }
    
    static void setNumber(
                          /*[in]*/ v8::Local<v8::Object>& item,
                          /*[in]*/ const char* strKey,
                          /*[in]*/ const int iVal
                          )
    {
        item->Set(Nan::New<v8::String>(strKey).ToLocalChecked(), Nan::New<v8::Number>(iVal));
    }
};

