//
//  UsbEthernetFinder.h
//
//  Copyright 2016 Sony Corporation
//

#pragma once

#include <CoreFoundation/CoreFoundation.h>
#include <IOKit/IOTypes.h>

#include "UsbEthernetDevice.h"

#include <string>
#include <vector>


class UsbEthernetFinder
{
private:
    UsbEthernetFinder() {}
    ~UsbEthernetFinder() {}
    
    static kern_return_t GetDeviceInfo(
                                       /*[in]*/ io_service_t ioDevice,
                                       /*[out]*/ std::shared_ptr<UsbEthernetDevice>& deviceList
                                       );
    
    static kern_return_t FindDeviceFromUsb(
                                    /*[in]*/ UInt16 idVendor,
                                    /*[in]*/ UInt16 idProduct,
                                    /*[out]*/ std::vector<std::shared_ptr<UsbEthernetDevice>>& deviceList
                                    );
    static kern_return_t FindDeviceFromAll(
                                    /*[in]*/ UInt16 idVendor,
                                    /*[in]*/ UInt16 idProduct,
                                    /*[out]*/ std::vector<std::shared_ptr<UsbEthernetDevice>>& deviceList
                                    );

    static kern_return_t FindDevice(
                                     /*[in]*/ UInt16 idVendor,
                                     /*[in]*/ UInt16 idProduct,
                                     /*[in]*/ const char * serviceName,
                                     /*[out]*/ std::vector<std::shared_ptr<UsbEthernetDevice>>& deviceList
                                     );
public:
    static std::string FindDevice(
                                    /*[in]*/ UInt16 idVendor,
                                    /*[in]*/ UInt16 idProduct,
                                    /*[out]*/ std::vector<std::shared_ptr<UsbEthernetDevice>>& deviceList
                                    );
};

