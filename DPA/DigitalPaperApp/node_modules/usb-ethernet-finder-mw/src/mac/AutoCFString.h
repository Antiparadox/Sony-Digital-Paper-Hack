//
//  AutoCFString.h
//
//  Copyright 2016 Sony Corporation
//

#pragma once

class AutoCFString
{
private:
    const __CFString* pstr;
    
public:
    AutoCFString(/*[in]*/ const __CFString* pstr) : pstr(pstr) {
    }
    
    ~AutoCFString() {
        if (this->pstr) {
            CFRelease(this->pstr);
            this->pstr = nullptr;
        }
    }

    const __CFString* get() const
    {
        return this->pstr;
    }
    
    const __CFString* operator->() const
    {
        return this->pstr;
    }

    const __CFString& operator*() const
    {
        return *this->pstr;
    }
    
    operator bool() const {
        return !!this->pstr;
    }
    
    bool operator!() const {
        return !this->pstr;
    }
    
    void copy(/*[out]*/ std::string& rstr) {
        if (!this->pstr) {
            return;
        }
        
        // Convert from a CFString to a C (NUL-terminated)
        char sz[1024] = {0};
        Boolean result = CFStringGetCString(
                                            this->pstr,
                                            sz,
                                            sizeof(sz),
                                            kCFStringEncodingUTF8
                                            );
        if(result) {
            rstr = sz;
            return;
        }
     }
};
