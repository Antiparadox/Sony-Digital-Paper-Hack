//
//  UsbDevice.h
//
//  Copyright 2016 Sony Corporation
//

#pragma once

#include <nan.h>
#include <memory>
#include "tstring.h"

struct UsbDevice {
public:
	tstring	sPnpDeviceId;
	tstring	sDeviceDesc;
	tstring	sFriendlyName;
	tstring	sManufacturer;
	tstring	sClass;
	tstring	sService;
	UINT16	idVendor;
	UINT16	idProduct;
	tstring	sSerialNumber;
	std::vector<std::shared_ptr<UsbDevice>>	vChildList;

	inline v8::Local<v8::Object> genV8Object() {
		v8::Local<v8::Object> item = Nan::New<v8::Object>();
		setString(item, "pnpDeviceId",	this->sPnpDeviceId);
		setString(item, "deviceDesc",	this->sDeviceDesc);
		setString(item, "friendlyName", this->sFriendlyName);
		setString(item, "manufacturer", this->sManufacturer);
		setString(item, "class",		this->sClass);
		setString(item, "service",		this->sService);
		setString(item, "serialNumber",	this->sSerialNumber);
		setNumber(item, "idVendor",		this->idVendor);
		setNumber(item, "idProduct",	this->idProduct);
		setArray(item,	"children",		this->vChildList);
		return item;
	};

private:
	static void setArray(
		/*[in]*/ v8::Local<v8::Object>& item,
		/*[in]*/ const char* strKey,
		/*[in]*/ const std::vector<std::shared_ptr<UsbDevice>>& strVal
		)
	{
		int i = 0;
		v8::Local<v8::Array> array = Nan::New<v8::Array>();
		for (auto it = strVal.cbegin(); it != strVal.cend(); it++) {
			v8::Local<v8::Object> item = (*it)->genV8Object();
			array->Set(i++, item);
		}
		item->Set(Nan::New<v8::String>(strKey).ToLocalChecked(), array);
	}

	static void setString(
		/*[in]*/ v8::Local<v8::Object>& item,
		/*[in]*/ const char* strKey,
		/*[in]*/ const std::string& strVal
		)
	{
		item->Set(Nan::New<v8::String>(strKey).ToLocalChecked(), Nan::New<v8::String>(strVal.c_str()).ToLocalChecked());
	}

	static void setString(
		/*[in]*/ v8::Local<v8::Object>& item,
		/*[in]*/ const char* strKey,
		/*[in]*/ const std::wstring& strVal
		)
	{
		item->Set(Nan::New<v8::String>(strKey).ToLocalChecked(), Nan::New<v8::String>((uint16_t*)strVal.c_str(), strVal.length()).ToLocalChecked());
	}

	static void setNumber(
		/*[in]*/ v8::Local<v8::Object>& item,
		/*[in]*/ const char* strKey,
		/*[in]*/ const int iVal
		)
	{
		item->Set(Nan::New<v8::String>(strKey).ToLocalChecked(), Nan::New<v8::Number>(iVal));
	}
};

