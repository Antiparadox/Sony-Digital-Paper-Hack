#include "StringUtil.h"
#include "WinErrorCode.h"
#include "../Log.h"


std::string StringUtil::StringToWString(
	/*[in]*/ const std::string& str,
	/*[out]*/ std::wstring& wstr
	)
{
	std::string errMsg;
	wchar_t* wszBuffer = nullptr;

	try {
		const int iBufferSize = ::MultiByteToWideChar(
			/* UINT CodePage			*/ CP_ACP,
			/* DWORD dwFlags			*/ MB_PRECOMPOSED,
			/* LPCSTR lpMultiByteStr	*/ str.c_str(),
			/* int cchMultiByte			*/ -1,
			/* LPWSTR lpWideCharStr		*/ nullptr,
			/* int cchWideChar			*/ 0
			);

		wszBuffer = (wchar_t*)(new wchar_t[iBufferSize]);
		::ZeroMemory(wszBuffer, sizeof(wchar_t) * iBufferSize);

		const int iResult = ::MultiByteToWideChar(
			/* UINT CodePage			*/ CP_ACP,
			/* DWORD dwFlags			*/ MB_PRECOMPOSED,
			/* LPCSTR lpMultiByteStr	*/ str.c_str(),
			/* int cchMultiByte			*/ -1,
			/* LPWSTR lpWideCharStr		*/ wszBuffer,
			/* int cchWideChar			*/ iBufferSize
			);
		if (iResult == 0) {
			errMsg = WinErrorCode::GetLastError();
			LOG_ERROR(_T("MultiByteToWideChar() failed. [%S]"), errMsg.c_str());
		}

		wstr = std::wstring(wszBuffer);
	}
	catch (...) {
		if (errMsg.empty()) {
			errMsg = WinErrorCode::GetLastError();
			LOG_ERROR(_T("Unknown error occurred. [%S]"), errMsg.c_str());
		}
	}

	if (wszBuffer) {
		delete[] wszBuffer;
		wszBuffer = nullptr;
	}

	return errMsg;
}



std::string StringUtil::WStringToString(
	/*[in]*/ const std::wstring& wstr,
	/*[out]*/ std::string& str
	)
{
	std::string errMsg;
	char* szBuffer = nullptr;

	try {
		const int iBufferSize = ::WideCharToMultiByte(
			/* UINT CodePage			*/ CP_ACP,
			/* DWORD dwFlags			*/ 0,
			/* LPCWSTR lpWideCharStr	*/ wstr.c_str(),
			/* int cchWideChar			*/ -1,
			/* LPSTR lpMultiByteStr		*/ nullptr,
			/* int cchMultiByte			*/ 0,
			/* LPCSTR lpDefaultChar		*/ NULL,
			/* LPBOOL lpUsedDefaultChar */ NULL
			);

		szBuffer = (char*)(new char[iBufferSize]);
		::ZeroMemory(szBuffer, sizeof(char) * iBufferSize);

		const int iResult = ::WideCharToMultiByte(
			/* UINT CodePage			*/ CP_ACP,
			/* DWORD dwFlags			*/ 0,
			/* LPCWSTR lpWideCharStr	*/ wstr.c_str(),
			/* int cchWideChar			*/ -1,
			/* LPSTR lpMultiByteStr		*/ szBuffer,
			/* int cchMultiByte			*/ iBufferSize,
			/* LPCSTR lpDefaultChar		*/ NULL,
			/* LPBOOL lpUsedDefaultChar */ NULL
			);
		if (iResult == 0) {
			errMsg = WinErrorCode::GetLastError();
			LOG_ERROR(_T("WideCharToMultiByte() failed. [%S]"), errMsg.c_str());
		}

		str = std::string(szBuffer);
	}
	catch (...) {
		if (errMsg.empty()) {
			errMsg = WinErrorCode::GetLastError();
			LOG_ERROR(_T("Unknown error occurred. [%S]"), errMsg.c_str());
		}
	}

	if (szBuffer) {
		delete[] szBuffer;
		szBuffer = nullptr;
	}

	return errMsg;
}