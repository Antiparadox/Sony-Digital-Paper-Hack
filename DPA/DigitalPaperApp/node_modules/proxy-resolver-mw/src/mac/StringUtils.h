//
//  StringUtils.h
//
//  Copyright 2016 Sony Corporation
//

#pragma once

class StringUtils
{
public:
    
    static std::string CFStringToStlString(
                                           /*[in]*/ CFStringRef cfstring,
                                           /*[in]*/ CFStringEncoding encoding
                                           ) {
        const CFIndex length = CFStringGetLength(cfstring);
        if (length == 0) {
            return std::string();
        }
        
        CFRange wholeString = CFRangeMake(0, length);
        CFIndex outSize = 0;
        CFIndex converted = CFStringGetBytes(cfstring,
                                             wholeString,
                                             encoding,
                                             0,
                                             false,
                                             nullptr,
                                             0,
                                             &outSize);
        if (converted == 0 || outSize == 0) {
            return std::string();
        }
        
        
        const std::string::size_type elements =
        outSize * sizeof(UInt8) / sizeof(std::string::value_type) + 1;
        
        std::vector<std::string::value_type> outBuffer(elements);
        
        converted = CFStringGetBytes(cfstring,
                                     wholeString,
                                     encoding,
                                     0,
                                     false,
                                     reinterpret_cast<UInt8*>(&outBuffer[0]),
                                     outSize,
                                     nullptr);
        if (converted == 0) {
            return std::string();
        }
        
        outBuffer[elements - 1] = '\0';
        return std::string(&outBuffer[0], elements - 1);
    }
};
