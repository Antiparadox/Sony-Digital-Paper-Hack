'use strict';

const lcid = require('lcid');

const os = exports;

os.version = function () {
  const release = require('os').release();
  switch (process.platform) {
    case 'win32':
      return release;
      
    case 'darwin':
      const version = parseFloat(release);
      return '10.' + (version - 4);

    default:
      throw new Error('The platform "' + process.platform + '" is not supported.');
  }
};

os.locale = function (callback) {
  const execFile = require('child_process').execFile;
  switch (process.platform) {
    case 'win32':
      // > wmic os get locale
      execFile('wmic', ['os', 'get', 'locale'], function (err, stdout) {
        if (err) {
          callback(err);
          return;
        }
        // stdout に以下の実行結果が出力される
        // 　例）"Locale¥n0411¥n¥n"
        const lcidCode = parseInt(stdout.replace('Locale', ''), 16);
        const locale = lcid.from(lcidCode);
        callback(null, locale);
      });
      break;

    case 'darwin':
      // $ defaults read -g AppleLocale
      execFile('defaults', ['read', '-g', 'AppleLocale'], function (err, stdout) {
        if (err) {
          callback(err);
          return;
        }
        // stdout に以下の実行結果が出力される
        // 　例）"ja_JP¥n"
        // 　例）"ja_JP@currency=USD¥n"
        const locale = stdout.trim().slice(0,5);
        callback(null, locale);
      });
      break;

    default:
      throw new Error('The platform "' + process.platform + '" is not supported.');
  }
};

