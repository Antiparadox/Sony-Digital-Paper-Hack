
process.env.DEBUG = '*:error';

const AutoMagicClient = require('../index.js');

process.env.MW_DEBUG_AUTO_MAGIC = true;

const appVersion = '1.0.00.0000';
const appLanguage = 'English';

let cancel = true;

function getDownloadProgressRepeatedly() {
  setTimeout(() => {
    if (AutoMagicClient.isDownloading()) {
      const progress = AutoMagicClient.getDownloadProgress();
      const percent = progress.current * 100 / progress.total;
      console.log('progress: ' + percent + ' current: ' + progress.current + ' total: ' + progress.total);
      if (cancel && percent > 10) {
        AutoMagicClient.stopDownloading(function () {
          console.log('canceled');
        });
        cancel = false;
        return;
      }
      getDownloadProgressRepeatedly();
    }
  }, 1000);
}


function checkAndUpdate(callback) {
  AutoMagicClient.checkForAppUpdate(
    appVersion,
    appLanguage,
    function (error, updateInfo) {
      if (error) {
        console.error(error);
        callback(error);
        return;
      }

      console.log('New Version Found: ' + updateInfo.newVersion);

      AutoMagicClient.downloadAppUpdater(
        updateInfo.updater,
        './download',
        function (error, filePath) {
          if (error) {
            console.error('Download Failed: ', error);
            callback(error);
            return;
          }
          console.log('Download Completed: ' + filePath);
          callback(null);
        });

      getDownloadProgressRepeatedly();
    });
}

checkAndUpdate(function (error) {
  if (error) {
    setTimeout(() => {
      checkAndUpdate(function () {
      });
    }, 5 * 1000);
  }
});


