{
  "_args": [
    [
      "mw-reg-ctrl@git+ssh://git@github.com/LinfinyJapan/dps_node-mw-reg-ctrl.git",
      "/Users/altair/Work/v1.4.0.19120/dps_utility/release/dps_digitalpaperapp-pc"
    ]
  ],
  "_from": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-reg-ctrl.git",
  "_id": "mw-reg-ctrl@0.3.8",
  "_inCache": true,
  "_installable": true,
  "_location": "/mw-reg-ctrl",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/LinfinyJapan/dps_node-mw-reg-ctrl/master/package.json",
      "gitUrl": "git://github.com/LinfinyJapan/dps_node-mw-reg-ctrl.git",
      "httpsUrl": "git+https://github.com/LinfinyJapan/dps_node-mw-reg-ctrl.git",
      "shortcut": "github:LinfinyJapan/dps_node-mw-reg-ctrl",
      "ssh": "git@github.com:LinfinyJapan/dps_node-mw-reg-ctrl.git",
      "sshUrl": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-reg-ctrl.git",
      "type": "github"
    },
    "name": "mw-reg-ctrl",
    "raw": "mw-reg-ctrl@git+ssh://git@github.com/LinfinyJapan/dps_node-mw-reg-ctrl.git",
    "rawSpec": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-reg-ctrl.git",
    "scope": null,
    "spec": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-reg-ctrl.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-reg-ctrl.git#d8a7c3e6a4e463a8f5766a093d047b2b9ae808cf",
  "_shasum": "ad906cf2c04312369833d0662d82535e0d2c96a2",
  "_shrinkwrap": null,
  "_spec": "mw-reg-ctrl@git+ssh://git@github.com/LinfinyJapan/dps_node-mw-reg-ctrl.git",
  "_where": "/Users/altair/Work/v1.4.0.19120/dps_utility/release/dps_digitalpaperapp-pc",
  "author": "",
  "dependencies": {
    "atob": "^2.0.3",
    "auth-adpt-mw": "git+ssh://git@github.com/LinfinyJapan/dps_node-auth-adpt-mw.git",
    "btoa": "^1.1.2",
    "debug": "^2.2.0",
    "mw-conn-selector": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-conn-selector.git",
    "mw-error": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-error.git",
    "mw-port-fwdr": "git+ssh://git@github.com/LinfinyJapan/dps_node-mw-port-fwdr.git",
    "reg-store-mw": "git+ssh://git@github.com/LinfinyJapan/dps_node-reg-store-mw.git",
    "request": "^2.72.0"
  },
  "description": "Registration Ctrl",
  "devDependencies": {
    "prompt": "^1.0.0"
  },
  "gitHead": "d8a7c3e6a4e463a8f5766a093d047b2b9ae808cf",
  "license": "SEE LICENSE IN LICENSE",
  "main": "regctrl.js",
  "name": "mw-reg-ctrl",
  "optionalDependencies": {},
  "private": true,
  "readme": "MilkyWay Registration Control (mw-reg-ctrl)\r\n====================\r\n\r\n登録処理を実現するModule\r\n\r\nModule Functions\r\n--------------------\r\n\r\n* デバイス登録可能なデバイスを列挙し、デバイス登録シーケンスを流す\r\n  - 呼び出しもとに対して、PIN入力を促す。\r\n  - 登録シーケンス上に何らかのエラーが発生したら登録シーケンスを中止して、呼び出し元に通知。\r\n\r\nModule API\r\n--------------------\r\n\r\n* [interface](doc/interface.md)\r\n\r\nModule Assumption\r\n--------------------\r\n\r\n* このモジュールを、Electronから利用する場合には、Main Processで利用する事とする。\r\n\r\n  実際のGUIは、Renderer Processで実行することが想定されるが、その場合\r\n  には、electron.remote.require()を利用して、Main Process上でロードする。\r\n\r\n  例:\r\n  ```\r\n  const electron = require('electron');\r\n  const regctrl = electron.remote.require('mw-reg-ctrl');\r\n  ```\r\n\r\n* モジュールを呼び出す時には、内部的に万一にでも、HTTP PROXY経由で通信\r\n  をしてしまわないようにするため、`process.env.NO_PROXY = '*'`に設定する。\r\n\r\n  プロセス全体に効いてしまう設定のため、モジュール内では設定していない。\r\n\r\nModule Main Dependencies\r\n--------------------\r\n\r\n* [dependencies](doc/dependencies.md)\r\n\r\n開発する上での情報(参考情報)\r\n====================\r\n\r\nModuleを単独で動作させる大まかな手順\r\n--------------------\r\n\r\n最初に、Private Keyと、Public Keyのセットを作る。mw-auth-storeがStubの\r\nため。\r\n```\r\n$ ./scripts/generatekeys.sh\r\n```\r\n\r\n```\r\n$ npm init . # テストレポの作成\r\n$ npm install git+ssh://git@scm.sm.sony.co.jp:milkyway/node-mw-reg-ctrl.git # reg-ctrl のセットアップ\r\n$ node \r\n```\r\n\r\n```\r\n> .load node_modules/mw-reg-ctrl/test/stubs.js\r\n> var regctrl = require('mw-reg-ctrl');\r\n> regctrl.setOnPinRequest(pinRequestByPrompt);\r\n> regctrl.setOnBeforeStoreCert(beforeStoreCertPrompt);\r\n> regctrl.registerDevice('HOGEHOUGE', checkCallback);\r\n```\r\n\r\n\r\nModuleそのものを開発する際の大まかな手順\r\n--------------------\r\n\r\n1. package.jsonに記述している、git+ssh で記載しているRepoを、この\r\n   ModuleのRepoと同じ階層にCloneする。\r\n\r\n   - node-auth-adpt-mw\r\n   - node-mw-auth-ctrl\r\n   - node-mw-discovery-ctrl\r\n   - node-mw-error\r\n   - node-mw-port-fwdr\r\n   - node-mw-reg-ctrl\r\n   - node-reg-store-mw\r\n\r\n2. npm link を行う\r\n\r\n```\r\n$ ./scripts/generatekeys.sh\r\n```\r\n\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "scripts": {
    "doc": "jsdoc2md -c doc/conf.json regctrl.js > doc/interface.md",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.3.8"
}
