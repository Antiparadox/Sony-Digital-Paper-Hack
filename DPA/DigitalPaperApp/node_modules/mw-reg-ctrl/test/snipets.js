request('http://[fe80::acab:3fff:fe78:1fe2]:8080/register/pin', function(err, response, body) { console.log(err, response, body); })

request.post('http://127.0.0.1:60010/register/pin', function(err, response, body) { console.log(err, response, body); });


var lastErr = null;
var lastResponse = null;
var lastBody = null;

request.post('http://127.0.0.1:8080/register/pin', function(err, response, body) { lastErr = err; lastResponse = response; lastBody = body });

  .load lib/registration.js

.load stubs.js
launchPortForwarder();
var registerDevice = require('./lib/registration.js');
// registerDevice('http://127.0.0.1:58080');
registerDevice('http://127.0.0.1:58080', pinRequestByPrompt, function(err) { console.error(err); });



.load stubs.js
launchPortForwarder();
var regctrl = require('./lib/registration.js');
// registerDevice('http://127.0.0.1:58080');
regctrl.setOnPinRequest(pinRequestByPrompt);
regctrl.setOnBeforeStoreCert(beforeStoreCertPrompt);
regctrl.register('http://127.0.0.1:58080', function(err) { console.error(err); throw err; });
// regctrl.register('http://127.0.0.1:58080', function(err) { throw err; });



registerDevice('http://127.0.0.1:58080', pinRequestByPrompt, function(err) { console.error(err); });

> atob(lastM2.a) + atob(lastM2.b) + atob(lastM2.c) + atob(lastM2.d) + atob(lastM3.a) + atob(lastM3.b)

  "e": "quFqRImvCv1nr5arb/5IRV2sIuPcoF9aAsQcuvG0aQ4="

.load stubs.js
launchPortForwarder();

process.env.NODE_TLS_REJECT_UNAUTHORIZED = "0"
.load lib/auth.js
auth('https://127.0.0.1:58443');


  .load node_modules/mw-reg-ctrl/test/stubs.js
var regctrl = require('mw-reg-ctrl');
regctrl.setOnPinRequest(pinRequestByPrompt);
regctrl.setOnBeforeStoreCert(beforeStoreCertPrompt);
regctrl.registerDevice('HOGEHOGE', regctrl.PHY_TYPE_USB, checkCallback);




var ipcRenderer = require('electron').ipcRenderer

window.prompt = function(title, val){
  return ipcRenderer.sendSync('prompt', {title, val})
}

function pinRequestByPrompt(timeout, callback) {
  console.log('pinRequestByPrompt called');
  var pin = prompt('PIN', '');
  callback(null, pin);
}

function beforeStoreCertPrompt(timeout, callback) {
  var pin = prompt('Cert', 'Cert');
  callback(null, true);
}

var lastError = null;
function checkCallback(err) {
  if ( err ) {
	console.error('RESULT is err: ', err);
	lastError = err;
	return;
  }
  console.log('SUCCEED');
}

// var regctrl = require('mw-reg-ctrl');
var regctrl = require('electron').remote.require('mw-reg-ctrl');
regctrl.setOnPinRequest(pinRequestByPrompt);
regctrl.setOnBeforeStoreCert(beforeStoreCertPrompt);
regctrl.registerDevice('HOGEHOGE', regctrl.PHY_TYPE_USB, checkCallback);





//////////////////////////////////////////////////////////////////////
///	@name	Hoge
//////////////////////////////////////////////////////////////////////
//@{
//@}



const ipcRenderer = require('electron').ipcRenderer

window.prompt = function(title, val){
  return ipcRenderer.sendSync('prompt', {title, val})
}

function pinRequestByPrompt(timeout, callback) {
  console.log('pinRequesByPrompt called');
  var pin = prompt('PIN', '');
  callback(null, pin); console.log('pinRequestByPrompt return');
}

function beforeStoreCertPrompt(timeout, callback) {
  console.log('beforeStoreCertPromp entered');
  var pin = prompt('Cert', 'Cert');
  callback(null, true);
}

var lastError = null;
function checkCallback(err) {
  if ( err ) {
	console.error('RESULT is err: ', err);
	lastError = err;
	return;
  }
  console.log('SUCCEED');
}

var regctrl = require('electron').remote.require('mw-reg-ctrl');
// var regctrl = require('mw-reg-ctrl');
regctrl.setOnPinRequest(pinRequestByPrompt);
regctrl.setOnBeforeStoreCert(beforeStoreCertPrompt);
regctrl.registerDevice('HHHHHH', regctrl.PHY_TYPE_USB, checkCallback);



* libusb, shared.
  - libusb. try and solution.
  - DECLSPEC,
  - libusb, tryand solution.

* libusb,
  -


//////////////////////////////////////////////////////////////////////
///	@name	node6
//////////////////////////////////////////////////////////////////////
//@{

.load test/stubs.js
var regctrl = require('./regctrl');
regctrl.setOnPinRequest(pinRequestByPrompt);
regctrl.setOnBeforeStoreCert(beforeStoreCertPrompt);
// regctrl.registerDevice('HHHHHH', checkCallback);
var deviceId = '844300509002591';
regctrl.registerDevice(deviceId, checkCallback);

//@}



//////////////////////////////////////////////////////////////////////
///	@name	node5
//////////////////////////////////////////////////////////////////////
//@{
//@}

// var store = require('reg-store-mw');
// var authadpt = require('auth-adpt-mw');
// var atob = require('atob');
// var btoa = require('btoa');

var m1 = {
  "a": "TGbf+dLDhPPpFjNg9U2o6g==",
  "b": "KMLdolIx",
  "c": "C23iA1AMuV2FoIh92DsmNlmJOPeTKI3WRiInXCgVswHsPuiD1cB4XYomBStBfIAlvBlULagEeVz6QRbgWSR0K16/4XvY9efb4oYrXeroGbCc0FfHPjr7YdvTYgxOhdcikqhGlNC7zTQCmYpoW56As+/o+J5zEmFKeMTrV8ADcN5zSmrZIXW7HL+gHY+ZnSuY8G1Y7pbnqreQrygRoO9vsj1Ddq6Jg3q8NMx+HL4X2s4zS3lB4WJzKSE5HwksGBp2lXNHdBHPgw4kArcuurWmg5mjqFlFEYmGo+wCVdqVZBDLTFsKQdNZ74CeVtMZ/jyqhIcGg7Iq4P5omOjRAVxbTA=="
}

// var authadpt = require('./');
var authadpt = require('auth-adpt-mw');
var atob = require('atob');
var btoa = require('btoa');

/**
 */

var n1 = atob(m1.a);
var mac = atob(m1.b);
var yb = atob(m1.c);
var n2 = authadpt.generateNonce();
var authKey;
var keyWrapKey;
var ya;
authadpt.generateKeys(yb, n1, mac, n2, function(err, ya_, authKey_, keyWrapKey_) {
  if ( err ) {
    reject(err);
    return;
  }
  ya = ya_;
  authKey = authKey_;
  keyWrapKey = keyWrapKey_;
});

///////////////////////////////////
///	Time
///////////////////////////////////

var m2hmac = authadpt.generateHmac(n1 + mac + yb + n1 + n2 + mac + ya, authKey);

var m2 = {
  a: btoa(n1),
  b: btoa(n2),
  c: btoa(mac),
  d: btoa(ya),
  e: btoa(m2hmac)
};

authKey node5 'unY9xbwwZPZuoPHDJMAqty1WJ/o5pssVF6eB6yBjFzA=' Good
keyWrapKey 'Mc2/DR6nOCtUO+nidvIRPA=='
derivedKey 'unY9xbwwZPZuoPHDJMAqty1WJ/o5pssVF6eB6yBjFzAxzb8NHqc4K1Q76eJ28hE8'

zz node5 'HtZ66QN/9hut126NY78mycdtLDTxcCbOtwB96pNlXGfNIV3RI9gogaND1J1ptbctiqOAwFqK5zzrOKRd
NoeOjBSjHdC1BOPKenMRzvxjgEmpa8xj/Eo+XktQ0pZAfh/lVzTO2fXLVTFTjfgAV91ST8aQGLXkIVl5
MmKQHXu5YgWCJzwu3DPp3HQl0UhD92bGHdyj//gMh07xby4xsYi+qI0lUFeYMigS5+joicTyP5l8t6Hq
6UqnMEEMe1CANtPmqtDrYhCA90XZtXI3t2DXvHoFS6JIFsYt05N45LK4Zj2etcQyjUZZFYWQNbi6eO9L
fhgZQaL+dDSTvIEjAyt4Sw=='

zz node6 'HtZ66QN/9hut126NY78mycdtLDTxcCbOtwB96pNlXGfNIV3RI9gogaND1J1ptbctiqOAwFqK5zzrOKRd
NoeOjBSjHdC1BOPKenMRzvxjgEmpa8xj/Eo+XktQ0pZAfh/lVzTO2fXLVTFTjfgAV91ST8aQGLXkIVl5
MmKQHXu5YgWCJzwu3DPp3HQl0UhD92bGHdyj//gMh07xby4xsYi+qI0lUFeYMigS5+joicTyP5l8t6Hq
6UqnMEEMe1CANtPmqtDrYhCA90XZtXI3t2DXvHoFS6JIFsYt05N45LK4Zj2etcQyjUZZFYWQNbi6eO9L
fhgZQaL+dDSTvIEjAyt4Sw=='
/+D/004kcWInFfmrC2/mxsTGnjM5slsZcOAes7vJnQA2jNCT4/o0RXnyHJBvZfdS

authKey node6 '/+D/004kcWInFfmrC2/mxsTGnjM5slsZcOAes7vJnQA='
keyWrapKey 'NozQk+P6NEV58hyQb2X3Ug=='


{ a: 'TGbf+dLDhPPpFjNg9U2o6g==',
  b: 'G3/TBqzaWD9cZen8rqJngQ==',
  c: 'KMLdolIx',
  d: 'ADwSUQB9hbUWMEpKpZPHzCycQRZl58UofIJzHinuTir5xwU0CF539IP185AwKrIHJ51HGPzhUn
+PbMsoNNlwYF/4r3IFoxXQ+OYdxSyj9Car1dl7LtzEKg819D7kYuEA6aUuFtbBNx4SkqJm0ThL1M2wxX
RBB8jTSPXSuQiXaIvOf+K6R55ewwdLZfKyf8JljLJvlbZl2MnGM2EGs24VBBrVxFJrPp11E2dYU7cFLs
FNCdIfAIsZw0WF6IGS2XzzNf1HPRqL8nHY6ZwfpDlX64SX359aFol4xb1XDxZBAL3icng3jzpSlHZeWd
KSG8MS8atOwcb2FPeLxRjnEvl/ckU=',
  e: '56OxTncVuCQra1c1BSSYrpQKRn/klyhdig1wFd+SmWI=' }

{ a: 'TGbf+dLDhPPpFjNg9U2o6g==',
  b: 'G3/TBqzaWD9cZen8rqJngQ==',
  c: 'KMLdolIx',
  d: 'ADwSUQB9hbUWMEpKpZPHzCycQRZl58UofIJzHinuTir5xwU0CF539IP185AwKrIHJ51HGPzhUn
+PbMsoNNlwYF/4r3IFoxXQ+OYdxSyj9Car1dl7LtzEKg819D7kYuEA6aUuFtbBNx4SkqJm0ThL1M2wxX
RBB8jTSPXSuQiXaIvOf+K6R55ewwdLZfKyf8JljLJvlbZl2MnGM2EGs24VBBrVxFJrPp11E2dYU7cFLs
FNCdIfAIsZw0WF6IGS2XzzNf1HPRqL8nHY6ZwfpDlX64SX359aFol4xb1XDxZBAL3icng3jzpSlHZeWd
KSG8MS8atOwcb2FPeLxRjnEvl/ckU=',
  e: 'h/bnXd/a523HSohxRmdQo9dHYVN+INnBGblMnYGXjmQ=' }

// console.log(m2);

var hmacSrcBase64 = btoa(n1 + mac + yb + n1 + n2 + mac + ya);
var authKeyBase64 = btoa(authKey);

console.log('var hmacSrcBase64 = "' + hmacSrcBase64 + '"');
console.log('var authKeyBase64 = "' + authKeyBase64 + '"');
console.log('var m2 = ' + JSON.stringify(m2, null) + '');

//////////////////////////////////////////////////////////////////////
///	@name	node 6
//////////////////////////////////////////////////////////////////////
//@{
//@}

// var hmacSrcBase64 = btoa(n1 + mac + yb + n1 + n2 + mac + ya);
// var authKeyBase64 = btoa(authKey);

// var m2hmac = authadpt.generateHmac(atob(hmacSrcBase64), atob(authKeyBase64));

//////////////////////////////////////////////////////////////////////
///	@name	node 6
//////////////////////////////////////////////////////////////////////
//@{
//@}

var hmacSrcBase64 = "TGbf+dLDhPPpFjNg9U2o6ijC3aJSMQtt4gNQDLldhaCIfdg7JjZZiTj3kyiN1kYiJ1woFbMB7D7og9XAeF2KJgUrQXyAJbwZVC2oBHlc+kEW4FkkdCtev+F72PXn2+KGK13q6BmwnNBXxz46+2Hb02IMToXXIpKoRpTQu800ApmKaFuegLPv6PiecxJhSnjE61fAA3Dec0pq2SF1uxy/oB2PmZ0rmPBtWO6W56q3kK8oEaDvb7I9Q3auiYN6vDTMfhy+F9rOM0t5QeFicykhOR8JLBgadpVzR3QRz4MOJAK3Lrq1poOZo6hZRRGJhqPsAlXalWQQy0xbCkHTWe+AnlbTGf48qoSHBoOyKuD+aJjo0QFcW0xMZt/50sOE8+kWM2D1TajqybIbUjGoKZrRA5vWyQRR+SjC3aJSMQB6xRiQ1/HLtOsqrxXoIvMc3XCM4oldHajLXTafsKcXObhg6iHHYBW9em0Mb1KwZRJDGNrrHRL8qEVamk2F0ria6hMYXNzy4N31cR3M8jLyga1MFuaGlgFNWbGdBzYRNew1lpjUf0NybNMuag1v26mSOZ2HnF6UbABdMcK3LrHIgOsahjf/SOsrgZ+2HQuHJ18lz81P6KlLWjw25ZxaHjHyIkXg0IP405YTNtqRELbN38aNQ390A6VfGq/pELo7Xr+hFyAAoPagm/2f/nJcSaMQnT6gOO4Um6yMhUbFq8NIq2V9iMwjjCrId3DfhksVPqd4ujRB4ZlDeAMWxveljZcw"
var authKeyBase64 = "4JBIX8FfKuef6twrmj6Eqsd0/hcPRavH5jcTmrcLT/Y="
var m2 = {"a":"TGbf+dLDhPPpFjNg9U2o6g==","b":"ybIbUjGoKZrRA5vWyQRR+Q==","c":"KMLdolIx","d":"AHrFGJDX8cu06yqvFegi8xzdcIziiV0dqMtdNp+wpxc5uGDqIcdgFb16bQxvUrBlEkMY2usdEvyoRVqaTYXSuJrqExhc3PLg3fVxHczyMvKBrUwW5oaWAU1ZsZ0HNhE17DWWmNR/Q3Js0y5qDW/bqZI5nYecXpRsAF0xwrcusciA6xqGN/9I6yuBn7YdC4cnXyXPzU/oqUtaPDblnFoeMfIiReDQg/jTlhM22pEQts3fxo1Df3QDpV8ar+kQujtev6EXIACg9qCb/Z/+clxJoxCdPqA47hSbrIyFRsWrw0irZX2IzCOMKsh3cN+GSxU+p3i6NEHhmUN4AxbG96WNlzA=","e":"btJNTYHfRdHuG4moP1Zmejk1+qvuWCcqdssRphEOdNc="}

// var authadpt = require('auth-adpt-mw')
var authadpt = require('./')
var atob = require('atob');
var btoa = require('btoa');

m2.e = btoa(authadpt.generateHmac(atob(hmacSrcBase64), atob(authKeyBase64)));
console.log(m2);



var baseUrl = 'http://localhost:58084';
var request = require('request');

// var m2 = { a: 'cjq1MixfeBqzHAgeejdmTw==',
//   b: 'y2STIhjg+mINOsFzr48HKw==',
//   c: 'KMLdolIx',
//   d: 'ACRb1kWcIWDLQJD3Htth2jlX4AWUWH9v+hR1G6UQfj28tbkcmsHJJa19f8kFVWwqVm8VQPfLmRCBmFXrrGZX/DrHZkx4hN2boJI59lnZM4EdFYnrDlk/X+IWNUKIYNjD3yPR+pYE77Ov42W5z+wW+JTrgiXvL4yVyPT1oljNyaSS6iDwm4BdovkVF2o8SdoYATxZkot9zt2YJ2HYDC0i4AQJTAEZsPTUgL630qZUNf8+K2O/UojCnrWAvlYlnFAir7uonFxkywKqRLDxhy5s0TzEkKFPpQxWzhWSqZH5d+vWoeO10fZvQEO51ZzzDOHdPy8p3lpP52o2pNfYRjOm88I=',
//   e: '1URA126EZOCAxBe/LlCwzBjUCYEvEaPhEhl4fK9N/BQ=' }

var m2 = { a: 'TGbf+dLDhPPpFjNg9U2o6g==',
  b: 'ybIbUjGoKZrRA5vWyQRR+Q==',
  c: 'KMLdolIx',
  d: 'AHrFGJDX8cu06yqvFegi8xzdcIziiV0dqMtdNp+wpxc5uGDqIcdgFb16bQxvUrBlEkMY2usdEvyoRVqaTYXSuJrqExhc3PLg3fVxHczyMvKBrUwW5oaWAU1ZsZ0HNhE17DWWmNR/Q3Js0y5qDW/bqZI5nYecXpRsAF0xwrcusciA6xqGN/9I6yuBn7YdC4cnXyXPzU/oqUtaPDblnFoeMfIiReDQg/jTlhM22pEQts3fxo1Df3QDpV8ar+kQujtev6EXIACg9qCb/Z/+clxJoxCdPqA47hSbrIyFRsWrw0irZX2IzCOMKsh3cN+GSxU+p3i6NEHhmUN4AxbG96WNlzA=',
  e: 'BAKOmbWbcK5RhntikdxkZDI9m4W0Wg4/YgGjVZ2n1ac=' }

request.post({ url: baseUrl + '/register/hash', json: m2 }, function(err, response, body) {
  console.log('response.statusCode: ', response.statusCode);
  console.log('body: ', body);
  // console.log(err, response, body);
});

// [2016-07-01 13:52:09+09:00] kan.k: [TODO] 鍵の生成までを、node5側で、
// 最後のgenerateHmacを、node6側で実行したら失敗した。少なくともHMACの
// アルゴリズムが、node6ではオカシイ。

// [2016-07-01 13:53:14+09:00] kan.k: [TODO] 暗号処理を、node5側で行っ
// て、requestをnode6で行ったら成功した。2回。requestの問題ではない。


			 
//////////////////////////////////////////////////////////////////////
///	@name	絞り込み後
//////////////////////////////////////////////////////////////////////
//@{

var authadpt = require('auth-adpt-mw')

var atob = require('atob');
var btoa = require('btoa');
var hmacSrcBase64 = "xFKJzXRIiFjqbzD2o9sNbCjC3aJSMXS94Sxghzz9HTYkkWnui6zG9UmTRezwmR5UbUtqLUhJTpWykTR/Ht4qs74VTcQqTqNeHC7yxfMGCaa9gMK/vvMfCveVw1gCK8p2Iplch3jkLrdPaEXu3xZHKYP1eiFvLhGHH6OIN8BkyiU6tZ+vk0oPC0UkIz7j+A2MgIQUxtiauAFPEsw8HGqcfbjzZZF3+qCjwzEKWNOInaDwsNUlrkZUlfYxT05gsgRcCUYyi9SdBJh18n9hG8b2fDd9x24l2MZFlHCjji1/iqzl4dIMkgx+IqA58DfAGH/wuHkAnOpZ1V/RsRsiGNJ3URNm1hmQpWZ3SJzfodS89nOJcRRv87fEUonNdEiIWOpvMPaj2w1sDWdD/UVczXQR3pYGRuHmdSjC3aJSMQDa+UPk5y7GodDKnhZjtmWo/xO1DsT9i4yRGUKBSw/pyt8bWxWCbvmX1TuW/d7XNTEAuAeuYyaU5eR9tb13N1CPvcbfCh0L3/nlXDDASZbYrAdG/TjAljkiPvrunS+GPY77IzBCMJk5Ws2lp1zCapvXz+regvTjLcURo5+QQrKTRlJrsTiFmfTpIHfYlB/e7zaZ6/A2VTMcyPrxH0Xa+Vs6QGfHK9SWH32y38GpB7WWcXffX4NjROkLajPMCdjc6YGN7ThDvifxshqGU950NUE6CBsUFi/Tj23HoB1d54b10J2Y55akzH1zoQndCWmNjwWf+7YEWbj6mwpzQDD9DwRh"
var authKeyBase64 = "GXQxG6MqnVCp06E2mBPalsYcTdKI84nsQO6+lbkn4Lg="

var authKey = atob(authKeyBase64);
var hmacSrc = atob(hmacSrcBase64);
crypto.createHmac('sha256', authKey).update(hmacSrc).digest('base64');

btoa(authadpt.generateHmac(atob(hmacSrcBase64), atob(authKeyBase64)));

'rh6R623xjq/ftHvvaQ+15VQYSjeepZgdNwb7Jf4Lwoo='


//@}

			 ///////////////////////////////////
			 ///	succeed
			 ///////////////////////////////////
			 
			 



/**
 */


request.post({
  url: baseUrl + WEBAPI_REGISTER_HASH,
  json: m2});

request.post({
  url: baseUrl + WEBAPI_REGISTER_HASH,
  json: m2});

