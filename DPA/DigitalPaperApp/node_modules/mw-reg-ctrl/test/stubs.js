/**
	serialport.js
	
	creator:	kan.k
	created:	[2016-04-26 22:26:27+09:00]
	modified:	[2016-04-26 22:26:27+09:00]
	description:
	Hoge
	
*/


var serialPort = require('serialport');

var SerialPort = serialPort.SerialPort;

function listPort() {
  serialPort.list(function (err, ports) {
	console.log(ports);
  });
}
  
function initiatePort(comName) {
  // var denebserial = new SerialPort(comName);
  var ds = new SerialPort(comName, {}, false);
  ds.open(function() {
	var cmdrndis = new Buffer([0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x04]);
	ds.write(cmdrndis, function() {
	  console.log('written');
	});
  });
}

var mdns = require('mdns-js');


function createBrowser(instance) {
  var browser = new mdns.createBrowser(mdns.tcp('digitalpaper'));
  browser.on('ready', function () {
	console.log('ready');
    browser.discover();
  });
  
  browser.on('update', function (data) {
	if ( instance && data.fullname && data.fullname.indexOf(instance) < 0 ) {
	  console.log('ignored', data.fullname);
	  return;
	}
	console.log('update');
    console.log('data:', data);
  });

  browser.on('serviceUp', function (service) {
	console.log('serviceUp');
    console.log('service:', service);
  });

  browser.on('serviceDown', function (service) {
	console.log('serviceDown');
    console.log('service:', service);
  });

  return browser;
}


function launchPortForwarder() {
  var net = require('net');

  var fromhost = 'localhost';
  var fromport = 58080;
  // var fromport = 60010;
  // var tohost = 'fe80::a461:33ff:fe06:c90b%29'
  // var tohost = 'fe80::708a:35ff:fe6b:c678%50'
  // var tohost = 'fe80::d87d:12ff:fe43:e16b%29'
  // var tohost = 'fe80::9883:abff:fe97:b9bd%29'
  // var tohost = 'fe80::acab:3fff:fe78:1fe2%29'
  var tohost = 'fe80::cca2:43ff:fee6:fe78%29';
  // var tohost = 'fe80::d076:a2ff:fe1c:c6a1%29';
  var toport = 8080;

  var server = net.createServer(function(from) {
	
	var to = net.createConnection({
	  host: tohost,
	  port: toport});
	
	from.pipe(to);
	to.pipe(from);
  });

  server.listen(fromport, fromhost);

  var fromports = 58443;
  var toports = 8443;

  var server = net.createServer(function(from) {
	var to = net.createConnection({
	  host: tohost,
	  port: toports});
	
	from.pipe(to);
	to.pipe(from);
  });

  server.listen(fromports, fromhost);
}

const prompt = require('prompt');

function pinRequestByPrompt(timeout, callback) {
  prompt.get(['pin'], function(err, result) {
	if ( err ) {
	  callback(err);
	  return;
	}
    console.log('pin entered is: ', result.pin);
	callback(null, result.pin);
  });
}

function beforeStoreCertPrompt(timeout, callback) {
  prompt.get(['confirmcert'], function(err, result) {
	if ( err ) {
	  callback(err);
	  return;
	}
	callback(null, true);
  });
}

var lastError = null;
function checkCallback(err) {
  if ( err ) {
	lastError = err;
	console.error('RESULT is err: ', err);
	return;
  }
  console.log('SUCCEED');
}

const DHP512= ("FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1" +
			   "29024E088A67CC74020BBEA63B139B22514A08798E3404DD" +
               "EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245" +
               "E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED" +
               "EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D" +
               "C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F" +
               "83655D23DCA3AD961C62F356208552BB9ED529077096966D" +
               "670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B" +
               "E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9" +
               "DE2BCBF6955817183995497CEA956AE515D2261898FA0510" +
               "15728E5A8AACAA68FFFFFFFFFFFFFFFF");

